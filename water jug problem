h=int(input("enter the large volume jug"))
l=int(input("enter the small volume jug"))
isj=list(map(int,input("enter the initial state").split(" ")))



gs=int(input("enter the goal state:"))




q=[]
def rules(x,y):
  if(x<h):
    q.append([h,y])
  if(y<l):
    q.append([x,l])
  if(x>0):
    q.append([0,y])
  if(y>0):
    q.append([x,0])
  if(x+y<=h and y>0):
    q.append([x+y,0])
  if(x+y>=h and y>0):
    q.append([h,(x+y)-h])
  if(x+y<=l and x>0):
    q.append([0,x+y])
  if(x+y>=l and x>0):
    q.append([(x+y)-l,l])



def bfs():
    q.append(isj)
    while q:
        j=q.pop(0)

        if(j not in v):
            v.append(j)
            if(gs in j):
                return v
            rules(j[0],j[1])

    return -1
q=[]
v=[]
r=bfs()
if(r==-1):
    print("not found")
else:
    for i in r:
        print(i)
